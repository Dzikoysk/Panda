module example-test

import panda-lang

class Foo extends Test {

    static method anotherEcho(String message1) {
        Console.print(message1)
    }

}

/*
[mutable] [nullable] <type:reader type> <name> [= <expression:reader expression]
String s

<expression>(<parameters>)
call()
*/

class Test {

    hidden mutable Test testField
    hidden Double i = 1.5D

    constructor(String message2) {
        Console.print(message2)
        this.testField = this
        testField = this
        this.echo(String.valueOf(i))
        echo(this)
    }

    constructor() {
        // empty constructor
    }

    method echo(Object message3) {
        Console.print(message3)
    }

    method testField() {
        this.echo(this.getTestField())
        return
    }

    method Test getTestField() {
        return this.testField
    }

 }

main {
    String init
    nullable Object req = null

    Test test = new Test('"Constructor"')
    test.echo("Method")
    Console.print(test.getTestField().testField)

    mutable nullable Foo varFoo = null
    varFoo = new Foo()

    mutable String s = "Hello Panda v1"
    s = "Hello Panda v2"

    Int i = 0x000001
    Number math = 10.1 + (3 + 4.2 + i) * 2 /*+ "test" */
    Boolean flag = i == i

    Console.print("Hello Panda", flag, varFoo, s, test, i)
    Console.print(math)

    if (!flag) {
        Console.print("Nope")
    }
    else {
        Console.print("Yay")
    }

    List list = new ArrayList()
    list.add("val1")
    list.add("val2")

    StringBuilder builder = new StringBuilder()
    builder.append(list)

    loop (i) {
        builder.append(" Loop x1 ")

        foreach (String var : list) {
            builder.append(var)
        }

        continue
        builder.append(" Loop x3 ")
    }

    while (flag != false) {
        Console.print(builder.toString())
        break
    }

    TestArray testArray = new TestArray(7);
    testArray.modify(test)

    String concat = "Hello " + "Array " + testArray.array.toString()
    Console.print(concat)

    Boolean or1 = true || false
    Boolean or2 = false || false

    Boolean and1 = true && false
    Boolean and2 = true && true

    Boolean greater1 = 1 > 2
    Boolean greater2 = 2 > 1

    Boolean less1 = 1 < 2
    Boolean less2 = 2 < 1

    Console.print("OR v AND: " + or1, or2, and1, and2, greater1, greater2, less1, less2)
}

class TestArray {

    hidden String[] array

    constructor(Int size) {
        this.array = new String[size];
    }

    local method modify(Test test) {
        this.getArray()[test.i] = "Hello Array"
        array[6] = String.valueOf(this)

        Console.print("Value at array[test.i]", this.getArray()[test.i])
    }

    method String[] getArray() {
        return array
    }

}