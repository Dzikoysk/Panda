module example-test

import panda-lang

class Foo extends Test {

    method static void anotherEcho(String message1) {
        Console.print(message1)
    }

}

/*
[mutable] [nullable] <type:reader type> <name> [= <expression:reader expression]
String s

<expression>(<parameters>)
call()
*/

class Test {

    hidden mutable Test testField
    hidden Double i = 1.0D

    constructor(String message2) {
        Console.print(message2)
        this.testField = this
        testField = this
        this.echo(String.valueOf(i))
        //echo(this.i)
    }

    constructor() {
        // empty constructor
    }

    method void echo(Object message3) {
        Console.print(message3)
    }

    method void testField() {
        this.echo(this.getTestField())
        return
    }

    method Test getTestField() {
        return this.testField
    }

 }

main {
    String init
    nullable Object req = null

    Test test = new Test('"Constructor"')
    test.echo("Method")
    Console.print(test.getTestField().testField)

    mutable nullable Foo varFoo = null
    varFoo = new Foo()

    mutable String s = "Hello Panda v1"
    s = "Hello Panda v2"

    Int i = 0x000001
    Int math = 10 + (3 + 4 + i) * 2 /*+ "test" */
    Boolean flag = true

    Console.print("Hello Panda", flag, varFoo, s, test, i)
    Console.print(math)

    if (!flag) {
        Console.print("Nope")
    }
    else {
        Console.print("Yay")
    }

    List list = new ArrayList()
    list.add("val1")
    list.add("val2")

    StringBuilder builder = new StringBuilder()
    builder.append(list)

    loop (i) {
        builder.append(" Loop x1 ")

        foreach (String var : list) {
            builder.append(var)
        }

        continue
        builder.append(" Loop x3 ")
    }

    while (flag) {
        Console.print(builder.toString())
        break
    }

    TestArray testArray = new TestArray(7);
    Console.print(testArray.array.toString());
    Console.print("Value at array[text.i]", testArray.getArray()[test.i]);

    testArray.modify()
}

class TestArray {

    hidden Object[][] array

    constructor(Int size) {
        this.array = new Object[][size];
    }

    local void modify() {
        //this.array[0] = 2;
        //this.array.set(0, 2);
    }

    method Object[][] getArray() {
        return array
    }

}